package com.nano;

import com.nano.datacollection.parsedata.entity.DataLiBangEliteV8;
import com.nano.datacollection.parsedata.parser.DataParserAiQin600A;
import com.nano.datacollection.parsedata.parser.DataParserAiQin600B;
import com.nano.datacollection.parsedata.parser.DataParserAiQin600C;
import com.nano.datacollection.parsedata.parser.DataParserBaoLaiTeA8;
import com.nano.datacollection.parsedata.parser.DataParserLiBangEliteV8;
import com.nano.datacollection.parsedata.parser.DataParserMaiRuiT8;
import com.nano.datacollection.parsedata.parser.DataParserMaiRuiWatoex65;
import com.nano.datacollection.parsedata.parser.DataParserYiAn8700A;
import com.nano.device.DeviceEnum;

import org.junit.Test;

/**
 * Description: 测试仪器数据解析器
 *
 * @version: 1.0
 * @author: nano
 * @date: 2021/1/9 20:01
 */
public class TestDeviceDataParser {



    @Test
    public void parseYiAn8700A() {

        // 以下四条数据是几乎同时发送而来的
        String data
        String data2 = "0B4D53487C5E7E5C267C7C7C7C7C392F32362F3230313920313A33353A313820504D7C7C4F52555E5230317C35387C507C322E347C0D4F42587C7C4E4D7C3135315E4149527C323030325E45464D7C302E307C7C7C7C7C7C460D4F42587C7C4E4D7C3135305E4E324F7C323030325E45464D7C302E307C7C7C7C7C7C460D4F42587C7C4E4D7C3135325E4F327C323030325E45464D7C302E307C7C7C7C7C7C460D1C0D%";
        String data
        // 波形数据
        String data

        DataParserYiAn8700A dataParserYiAn8700A = new DataParserYiAn8700A();

        System.out.println(dataParserYiAn8700A.parseData(DeviceEnum.YI_AN_8700A.getDeviceCode(), "13123",
                data1 + "%"
                    + data2 + "%"
                    + data3 + "%"
                    + data4).toString());
    }


    @Test
    public void parseMaiRuiT8() {

        String data

        DataParserMaiRuiT8 dataParserMaiRuiT8 = new DataParserMaiRuiT8();
        System.out.println(dataParserMaiRuiT8.parseData(DeviceEnum.MAI_RUI_T8.getDeviceCode(), "123456", data));

        System.out.println(Double.parseDouble("122"));
    }




    @Test
    public void parseMaiRuiWatoex65() {
        String data
        DataParserMaiRuiWatoex65 dataParserMaiRuiWatoex65 = new DataParserMaiRuiWatoex65();

        System.out.println(dataParserMaiRuiWatoex65.parseData(DeviceEnum.MAI_RUI_WATOEX65.getDeviceCode(), "1212", data));

    }


    @Test
    public void parseAiQin600A() {
        String data = "EF EF EF 65 23 18 00 00 00 0A 31 35 30 32 38 37 00 01 20 00 30 30 11 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42 7B 9F 68 3D DC 2A 30 7F C0 00 00 7F C0 00 00 7F C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 32 FE FE FE";
        DataParserAiQin600A dataParserAiQin600A = new DataParserAiQin600A();
        System.out.println(dataParserAiQin600A.parseData(DeviceEnum.AI_QIN_EGOS600A.getDeviceCode(), "1239", data));
    }


    @Test
    public void parseAiQin600B() {
        String data = "EFEFEFXX23180000000B313530323837000120003011427B9F683DDC2A307FC000007FC000007FC00000000000000000000000000000000000000000000032FEFEFE";
        DataParserAiQin600B dataParserAiQin600B = new DataParserAiQin600B();
        System.out.println(dataParserAiQin600B.parseData(DeviceEnum.AI_QIN_EGOS600B.getDeviceCode(), "1239", data));
    }

    @Test
    public void parseAiQin600C() {
        String data = "EFEFEFXX23180000000B3135303238370001200030427B9F683DDC2A307FC000007FC000007FC0000032FEFEFE";
        DataParserAiQin600C dataParserAiQin600C = new DataParserAiQin600C();
        System.out.println(dataParserAiQin600C.parseData(DeviceEnum.AI_QIN_EGOS600C.getDeviceCode(), "1239", data));
    }


    @Test
    public void parseLiBangEliteV() {

        String data = "<ORU_R01>\n" +
                "\t<MSH>\n" +
                "\t\t<MSH.1>|</MSH.1>\n" +
                "\t\t<MSH.2>^~\\&amp;</MSH.2>\n" +
                "\t\t<MSH.3>hospital</MSH.3>\n" +
                "\t\t<MSH.7>20190926153832</MSH.7>\n" +
                "\t\t<MSH.9>\n" +
                "\t\t\t<MSH.9.1>ORU</MSH.9.1>\n" +
                "\t\t\t<MSH.9.2>R01</MSH.9.2>\n" +
                "\t\t</MSH.9>\n" +
                "\t\t<MSH.12>2.3.1</MSH.12>\n" +
                "\t</MSH>\n" +
                "\t<PID>\n" +
                "\t\t<PID.2>07821674</PID.2>\n" +
                "\t\t<PID.3>07821674</PID.3>\n" +
                "\t\t<PID.5>WEN KE</PID.5>\n" +
                "\t\t<PID.7>19910315</PID.7>\n" +
                "\t\t<PID.8>M</PID.8>\n" +
                "\t</PID>\n" +
                "\t<PV1>\n" +
                "\t\t<PV1.2>U</PV1.2>\n" +
                "\t\t<PV1.3>\n" +
                "\t\t\t<PV1.3.3>Bed65</PV1.3.3>\n" +
                "\t\t</PV1.3>\n" +
                "\t\t<PV1.18>adult</PV1.18>\n" +
                "\t\t<PV1.44>00000</PV1.44>\n" +
                "\t</PV1>\n" +
                "\t<OBR>\n" +
                "\t\t<OBR.7>20190926153832</OBR.7>\n" +
                "\t</OBR>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>WEIGHT</OBX.3>\n" +
                "\t\t<OBX.5>65.0</OBX.5>\n" +
                "\t\t<OBX.6>kg</OBX.6>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>HEIGHT</OBX.3>\n" +
                "\t\t<OBX.5>175.0</OBX.5>\n" +
                "\t\t<OBX.6>cm</OBX.6>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>HR</OBX.3>\n" +
                "\t\t<OBX.5>60</OBX.5>\n" +
                "\t\t<OBX.6>bpm</OBX.6>\n" +
                "\t\t<OBX.7>50-120</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>PVCs</OBX.3>\n" +
                "\t\t<OBX.5>0</OBX.5>\n" +
                "\t\t<OBX.6>/min</OBX.6>\n" +
                "\t\t<OBX.7>&lt;10</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>RR</OBX.3>\n" +
                "\t\t<OBX.5>14</OBX.5>\n" +
                "\t\t<OBX.6>rpm</OBX.6>\n" +
                "\t\t<OBX.7>8-30</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>SpO2</OBX.3>\n" +
                "\t\t<OBX.5>99</OBX.5>\n" +
                "\t\t<OBX.6>%</OBX.6>\n" +
                "\t\t<OBX.7>90-100</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>PR</OBX.3>\n" +
                "\t\t<OBX.5>60</OBX.5>\n" +
                "\t\t<OBX.6>bpm</OBX.6>\n" +
                "\t\t<OBX.7>50-120</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>T1</OBX.3>\n" +
                "\t\t<OBX.5>36.00</OBX.5>\n" +
                "\t\t<OBX.6>C</OBX.6>\n" +
                "\t\t<OBX.7>36.00-39.00</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>T2</OBX.3>\n" +
                "\t\t<OBX.5>37.00</OBX.5>\n" +
                "\t\t<OBX.6>C</OBX.6>\n" +
                "\t\t<OBX.7>36.00-39.00</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>CVP_MAP</OBX.3>\n" +
                "\t\t<OBX.5>7</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>0-10</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>Art_SYS</OBX.3>\n" +
                "\t\t<OBX.5>120</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>90-160</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>Art_DIA</OBX.3>\n" +
                "\t\t<OBX.5>80</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>50-90</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>Art_MAP</OBX.3>\n" +
                "\t\t<OBX.5>93</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>60-110</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>P2_SYS</OBX.3>\n" +
                "\t\t<OBX.5>120</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>90-160</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>P2_DIA</OBX.3>\n" +
                "\t\t<OBX.5>80</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>50-90</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>P2_MAP</OBX.3>\n" +
                "\t\t<OBX.5>93</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>70-110</OBX.7>\n" +
                "\t</OBX>\n" +
                "\t<OBX>\n" +
                "\t\t<OBX.2>NM</OBX.2>\n" +
                "\t\t<OBX.3>LAP_MAP</OBX.3>\n" +
                "\t\t<OBX.5>7</OBX.5>\n" +
                "\t\t<OBX.6>mmHg</OBX.6>\n" +
                "\t\t<OBX.7>0-10</OBX.7>\n" +
                "\t</OBX>\n" +
                "</ORU_R01>";

        DataParserLiBangEliteV8 dataParserLiBangEliteV8 = new DataParserLiBangEliteV8();
        System.out.println(dataParserLiBangEliteV8.parseData(DeviceEnum.LI_BANG_ELITEV8.getDeviceCode(), "123123123", data).toString());

    }



}
